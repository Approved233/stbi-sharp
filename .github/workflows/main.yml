name: CI

on: 
  workflow_dispatch:
    inputs:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_native_linux:
    name: Build native on linux
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ../libstbi
          make install
      - uses: actions/upload-artifact@master
        with:
          name: linux-x64
          path: runtimes/linux-x64

  build_native_macos:
    name: Build native on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 ../libstbi
          make install
      - uses: actions/upload-artifact@master
        with:
          name: osx-x64
          path: runtimes/osx-x64

  build_native_windows:
    name: Build native on Windows
    runs-on: windows-2016
    strategy:
      matrix:
        platform: ["x86", "x64"]
    env:
      PLATFORM: ${{ matrix.platform == 'x86' && 'Win32' || 'x64' }}
      GENERATOR_PLATFORM: ${{ matrix.platform == 'x86' && 'Win32' || 'x64' }}

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.3

      - name: Build
        run: |
          echo "Platform $env:PLATFORM"
          mkdir build
          cd build
          cmake -A "$env:PLATFORM" -DCMAKE_GENERATOR_PLATFORM="$env:GENERATOR_PLATFORM" ../libstbi
          msbuild /v:m /p:Configuration=Release INSTALL.vcxproj

      - uses: actions/upload-artifact@master
        with:
          name: win-${{ matrix.platform }}
          path: runtimes/win-${{ matrix.platform }}

  build_wrapper:
    name: Build C# wrapper
    runs-on: ubuntu-latest
    needs: [build_native_linux, build_native_macos, build_native_windows]

    steps:
      - uses: actions/checkout@v1
      - name: Grab linux binary
        uses: actions/download-artifact@master
        with:
          name: linux-x64
          path: runtimes/linux-x64
      - name: Grab macOS binary
        uses: actions/download-artifact@master
        with:
          name: osx-x64
          path: runtimes/osx-x64
      - name: Grab Windows x64 binary
        uses: actions/download-artifact@master
        with:
          name: win-x64
          path: runtimes/win-x64
      - name: Grab Windows x86 binary
        uses: actions/download-artifact@master
        with:
          name: win-x86
          path: runtimes/win-x86
      - name: Build and pack nuget package
        run: dotnet pack -c Release
